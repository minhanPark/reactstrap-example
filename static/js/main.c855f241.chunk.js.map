{"version":3,"sources":["App.js","index.js"],"names":["App","state","collapse","toggleText","userInfo","name","email","userList","toggle","_this","setState","onEntered","onExited","handleSubmit","e","preventDefault","push","handleChange","_e$target","target","value","Object","objectSpread","defineProperty","handleDelete","tr","parentElement","index","Number","id","startArr","slice","endArr","concat","toConsumableArray","_this2","this","_this$state$userInfo","react_default","a","createElement","Button","color","onClick","style","marginBottom","Collapse","isOpen","Form","FormGroup","Row","Label","for","xs","Col","Input","type","placeholder","onChange","FormText","Table","dark","className","map","user","key","scope","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.c855f241.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Collapse,\n  Button,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Col,\n  Row,\n  FormText,\n  Table\n} from \"reactstrap\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    collapse: false,\n    toggleText: \"버튼을 누르면 창이 닫힙니다.\",\n    userInfo: { name: \"\", email: \"\" },\n    userList: [\n      { name: \"runningWater\", email: \"runningWater@example.com\" },\n      { name: \"anonymous\", email: \"anonymous@example.com\" },\n      { name: \"anonymous1\", email: \"anonymous1@example.com\" },\n      { name: \"anonymous2\", email: \"anonymous2@example.com\" }\n    ]\n  };\n  toggle = () => {\n    this.setState({\n      collapse: !this.state.collapse\n    });\n  };\n  onEntered = () => {\n    this.setState({\n      toggleText: \"버튼을 누르면 창이 닫힙니다.\"\n    });\n  };\n  onExited = () => {\n    this.setState({\n      toggleText: \"버튼을 누르면 창이 열립니다.\"\n    });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    this.state.userList.push(this.state.userInfo);\n    this.setState({\n      userInfo: { name: \"\", email: \"\" }\n    });\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    const userInfo = { ...this.state.userInfo, [name]: value };\n    this.setState({\n      userInfo\n    });\n  };\n  handleDelete = e => {\n    const { userList } = this.state;\n    const tr = e.target.parentElement.parentElement;\n    const index = Number(tr.id);\n    const startArr = userList.slice(0, index);\n    const endArr = userList.slice(index + 1);\n    this.setState({\n      userList: [...startArr, ...endArr]\n    });\n  };\n  render() {\n    const { userList } = this.state;\n    const { name, email } = this.state.userInfo;\n    return (\n      <div>\n        <Button\n          color=\"primary\"\n          onClick={this.toggle}\n          style={{ marginBottom: \"1rem\" }}\n        >\n          Toggle\n        </Button>\n        <h5>{this.state.toggleText}</h5>\n        <Collapse\n          isOpen={this.state.collapse}\n          onEntered={this.onEntered}\n          onExited={this.onExited}\n        >\n          <Form>\n            <FormGroup>\n              <Row>\n                <Label for=\"Name\" xs={2}>\n                  Name\n                </Label>\n                <Col xs={9}>\n                  <Input\n                    type=\"text\"\n                    name=\"name\"\n                    id=\"Name\"\n                    placeholder=\"Write your name\"\n                    value={name}\n                    onChange={this.handleChange}\n                  />\n                </Col>\n              </Row>\n              <FormText>My name is running water</FormText>\n            </FormGroup>\n            <FormGroup>\n              <Row>\n                <Label for=\"Email\" xs={2}>\n                  Email\n                </Label>\n                <Col xs={9}>\n                  <Input\n                    type=\"email\"\n                    name=\"email\"\n                    id=\"Email\"\n                    placeholder=\"Write your Email\"\n                    value={email}\n                    onChange={this.handleChange}\n                  />\n                </Col>\n              </Row>\n              <FormText>My Email is runningwater@exmaple.co</FormText>\n            </FormGroup>\n            <Button onClick={this.handleSubmit}>Submit</Button>\n          </Form>\n        </Collapse>\n        <Table dark className=\"table\">\n          <tbody>\n            {userList.map((user, index) => (\n              <tr id={index} key={index}>\n                <th scope=\"row\">{index + 1}</th>\n                <td>{user.name}</td>\n                <td>{user.email}</td>\n                <td>\n                  <Button color=\"danger\" onClick={this.handleDelete}>\n                    Delete\n                  </Button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}